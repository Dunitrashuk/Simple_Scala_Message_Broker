[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 20 products, 6 sources, 3 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/MessageBrokerActor.scala, ${BASE}/src/main/scala/Main.scala, ${BASE}/src/main/scala/EchoToSenderActor.scala, ${BASE}/src/main/scala/ListActor.scala, ${BASE}/src/main/scala/TestActor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/main/scala/messageBrokerActor.scala), changed = Set(${BASE}/src/main/scala/TestActor.scala, ${BASE}/src/main/scala/Main.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/main/scala/messageBrokerActor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/TestActor.scala, ${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(scala.EchoActor.Send, scala.EchoActor.Sub, scala.EchoActor, scala.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(scala.EchoActor.Send, scala.EchoActor.Sub, scala.EchoActor, scala.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/TestActor.scala, ${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.EchoActor.Send, scala.EchoActor.Sub, scala.EchoActor, scala.Main[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to C:\Users\mamal\Desktop\PTR_Lab\message_broker\target\scala-2.13\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.6.0:compile for Scala 2.13.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 769e976f for Scala compiler version 2.13.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\mamal\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.10\scala-library-2.13.10.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\mamal\Desktop\PTR_Lab\message_broker\target\scala-2.13\classes;C:\Users\mamal\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\typesafe\akka\akka-actor-typed_2.13\2.7.0\akka-actor-typed_2.13-2.7.0.jar;C:\Users\mamal\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\typesafe\akka\akka-actor_2.13\2.7.0\akka-actor_2.13-2.7.0.jar;C:\Users\mamal\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\typesafe\akka\akka-slf4j_2.13\2.7.0\akka-slf4j_2.13-2.7.0.jar;C:\Users\mamal\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\mamal\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\typesafe\config\1.4.2\config-1.4.2.jar;C:\Users\mamal\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-java8-compat_2.13\1.0.0\scala-java8-compat_2.13-1.0.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scala.Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.Main[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scala.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scala.Main,ModifiedNames(changes = UsedName(testActor3,[Default]), UsedName(echoActor2,[Default]), UsedName(testActor1,[Default]), UsedName(echoActor1,[Default]), UsedName(listActor,[Default]), UsedName(testActor2,[Default]), UsedName(echoActor3,[Default]), UsedName(echoToSenderActor,[Default]))) invalidates 1 classes due to The scala.Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(testActor3,[Default]), UsedName(echoActor2,[Default]), UsedName(testActor1,[Default]), UsedName(echoActor1,[Default]), UsedName(listActor,[Default]), UsedName(testActor2,[Default]), UsedName(echoActor3,[Default]), UsedName(echoToSenderActor,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scala.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scala.EchoActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.EchoActor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scala.EchoActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scala.EchoActor,ModifiedNames(changes = UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(notify,[Default]), UsedName(unhandled,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(receive,[Default]), UsedName(scala;EchoActor;init;,[Default]), UsedName(Sub,[Default]), UsedName(aroundReceive,[Default]), UsedName(Send,[Default]), UsedName(sender,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Receive,[Default]), UsedName(synchronized,[Default]), UsedName(aroundPreStart,[Default]), UsedName(EchoActor,[Default]), UsedName(##,[Default]), UsedName(self,[Implicit]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(aroundPostStop,[Default]), UsedName(notifyAll,[Default]), UsedName(preRestart,[Default]), UsedName(postStop,[Default]), UsedName(eq,[Default]), UsedName(preStart,[Default]), UsedName(context,[Implicit]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(postRestart,[Default]), UsedName(supervisorStrategy,[Default]))) invalidates 1 classes due to The scala.EchoActor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scala.EchoActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scala.TestActor.Send...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.TestActor.Send[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scala.TestActor.Send)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of scala.Main: [UsedName(actor,[Default]), UsedName(Send,[Default]), UsedName(apply,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scala.TestActor.Send,ModifiedNames(changes = UsedName(copy,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(msg,[Default]), UsedName(productArity,[Default]), UsedName(Send,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName(scala;TestActor;Send;init;,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]))) invalidates 2 classes due to The scala.TestActor.Send has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(msg,[Default]), UsedName(productArity,[Default]), UsedName(Send,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName(scala;TestActor;Send;init;,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scala.TestActor.Send)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(scala.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scala.EchoActor.Sub...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.EchoActor.Sub[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scala.EchoActor.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scala.EchoActor.Sub,ModifiedNames(changes = UsedName(copy,[Default]), UsedName(scala;EchoActor;Sub;init;,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(Sub,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(topic,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The scala.EchoActor.Sub has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName(scala;EchoActor;Sub;init;,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(Sub,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(topic,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scala.EchoActor.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scala.TestActor.Sub...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.TestActor.Sub[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scala.TestActor.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of scala.Main: [UsedName(actor,[Default]), UsedName(Sub,[Default]), UsedName(apply,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scala.TestActor.Sub,ModifiedNames(changes = UsedName(copy,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(scala;TestActor;Sub;init;,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(Sub,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(topic,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]))) invalidates 2 classes due to The scala.TestActor.Sub has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(scala;TestActor;Sub;init;,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(Sub,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(topic,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scala.TestActor.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(scala.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scala.TestActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.TestActor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scala.TestActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of scala.TestActor are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	scala.Main[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scala.TestActor,ModifiedNames(changes = UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(notify,[Default]), UsedName(unhandled,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(receive,[Default]), UsedName(Sub,[Default]), UsedName(scala;TestActor;init;,[Default]), UsedName(aroundReceive,[Default]), UsedName(Send,[Default]), UsedName(sender,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Receive,[Default]), UsedName(synchronized,[Default]), UsedName(aroundPreStart,[Default]), UsedName(##,[Default]), UsedName(self,[Implicit]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(TestActor,[Default]), UsedName(aroundPostStop,[Default]), UsedName(notifyAll,[Default]), UsedName(preRestart,[Default]), UsedName(postStop,[Default]), UsedName(eq,[Default]), UsedName(preStart,[Default]), UsedName(context,[Implicit]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(postRestart,[Default]), UsedName(supervisorStrategy,[Default]))) invalidates 2 classes due to The scala.TestActor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scala.TestActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(scala.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scala.EchoActor.Send...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scala.EchoActor.Send[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scala.EchoActor.Send)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scala.EchoActor.Send,ModifiedNames(changes = UsedName(copy,[Default]), UsedName(scala;EchoActor;Send;init;,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(msg,[Default]), UsedName(productArity,[Default]), UsedName(Send,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The scala.EchoActor.Send has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName(scala;EchoActor;Send;init;,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(copy$default$2,[Default]), UsedName(actor,[Default]), UsedName(productElementName,[Default]), UsedName(msg,[Default]), UsedName(productArity,[Default]), UsedName(Send,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(synchronized,[Default]), UsedName(curried,[Default]), UsedName(##,[Default]), UsedName(productElementNames,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scala.EchoActor.Send)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.7095434 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
